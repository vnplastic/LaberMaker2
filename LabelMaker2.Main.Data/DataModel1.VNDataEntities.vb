'------------------------------------------------------------------------------
' This is auto-generated code. 
'------------------------------------------------------------------------------
' This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
' Code is generated on: 3/15/2019 1:54:59 PM
'
' Changes to this file may cause incorrect behavior and will be lost if
' the code is regenerated.
'------------------------------------------------------------------------------

Imports System
Imports System.Collections
Imports System.Collections.Generic
Imports System.Collections.Specialized
Imports System.Collections.ObjectModel
Imports System.ComponentModel
Imports System.ComponentModel.DataAnnotations
Imports System.Data
Imports System.Data.Common
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.ModelConfiguration
Imports System.Data.Entity.ModelConfiguration.Conventions
Imports System.Linq
Imports System.Runtime.Serialization
Imports System.Xml.Serialization
Imports System.Data.Entity.Core.EntityClient
Imports System.Data.Entity.Core.Objects
Imports System.Data.Entity.Core.Objects.DataClasses

Namespace VNDataModel

    Public Partial Class VNDataEntities
      Inherits DbContext
        #Region "Constructors"
        ''' <summary>
        ''' Initialize a new VNDataEntities object.
        ''' </summary>
        Public Sub New()            
            MyBase.New("name=VNDataEntitiesConnectionString")
            Configure()
        End Sub

        ''' <summary>
        ''' Initializes a new VNDataEntities object using the connection string found in the 'VNDataEntities' section of the application configuration file.
        ''' </summary>
        Public Sub New(connectionString As String)
            MyBase.New(connectionString)
            Configure()
        End Sub

        Private Sub Configure()
            Configuration.AutoDetectChangesEnabled = True
            Configuration.LazyLoadingEnabled = False
            Configuration.ProxyCreationEnabled = True
            Configuration.ValidateOnSaveEnabled = True
        End Sub

        #End Region

        Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)

            Throw New UnintentionalCodeFirstException()
        End Sub

        #Region "DbSet Properties"
        Public Overridable Property TableJobTypes() As DbSet(Of TableJobType)
        Public Overridable Property TableJobs() As DbSet(Of TableJob)
        Public Overridable Property TableJobSteps() As DbSet(Of TableJobStep)
        Public Overridable Property TableCustomerJobInfos() As DbSet(Of TableCustomerJobInfo)
        Public Overridable Property TableCustomerJobSteps() As DbSet(Of TableCustomerJobStep)
        ''' <summary>
        ''' A filtered View of only "SoldTo" customers with their Ids
        ''' </summary>
        Public Overridable Property ViewCustomerSoldTos() As DbSet(Of ViewCustomerSoldTo)
        Public Overridable Property TableTypes() As DbSet(Of TableType)
        Public Overridable Property TypeCodes() As DbSet(Of TableTypeCode)
        Public Overridable Property ViewJobNotPrinteds() As DbSet(Of ViewJobNotPrinted)
        Public Overridable Property ViewTypesWithNames() As DbSet(Of ViewTypesWithName)
        Public Overridable Property ViewPalletJobsNotPrinteds() As DbSet(Of ViewPalletJobsNotPrinted)
        Public Overridable Property ViewPrinters() As DbSet(Of ViewPrinter)
        Public Overridable Property TablePrinters() As DbSet(Of TablePrinter)
        Public Overridable Property ViewJobInfos() As DbSet(Of ViewJobInfo)
        Public Overridable Property ViewCartonJobInfos() As DbSet(Of ViewCartonJobInfo)
        Public Overridable Property ViewPalletJobInfos() As DbSet(Of ViewPalletJobInfo)
        Public Overridable Property ViewAddressJobInfos() As DbSet(Of ViewAddressJobInfo)
        Public Overridable Property ViewCartonJobLineInfos() As DbSet(Of ViewCartonJobLineInfo)
        Public Overridable Property TableCartonJobs() As DbSet(Of TableCartonJob)
        Public Overridable Property TablePalletJobs() As DbSet(Of TablePalletJob)
        Public Overridable Property ViewAllJobs() As DbSet(Of ViewAllJob)
        Public Overridable Property ViewSalesOrders() As DbSet(Of ViewSalesOrder)
        Public Overridable Property ViewPalletJobLineInfos() As DbSet(Of ViewPalletJobLineInfo)
        #End Region
        #Region "Methods"


        Public Overridable Sub InsertNewCartonJobLine (ByVal Reprint As Boolean?) 
            Dim connection As EntityConnection = DirectCast(DirectCast(Me, IObjectContextAdapter).ObjectContext.Connection, EntityConnection)
            Dim needClose As Boolean = False
            If (connection.State <> System.Data.ConnectionState.Open) Then
              connection.Open()
              needClose = True
            End If

            Try
              Using command As EntityCommand = New EntityCommand()
                If DirectCast(Me, IObjectContextAdapter).ObjectContext.CommandTimeout.HasValue Then
                  command.CommandTimeout = DirectCast(Me, IObjectContextAdapter).ObjectContext.CommandTimeout.Value
                End If
                command.CommandType = System.Data.CommandType.StoredProcedure
                command.CommandText = "VNDataEntities.InsertNewCartonJobLine"
                command.Connection = connection
                Dim ReprintParameter As EntityParameter = New EntityParameter("Reprint", System.Data.DbType.Boolean)
				ReprintParameter.Direction = ParameterDirection.Input
                If (Reprint.HasValue) Then
                  ReprintParameter.Value = Reprint
                End If
                command.Parameters.Add(ReprintParameter)

                command.ExecuteNonQuery()
              End Using
            Finally
              If needClose Then
                connection.Close()
              End If
            End Try
        End Sub


        Public Overridable Sub InsertNewPalletJob (ByVal Reprint As Boolean?) 
            Dim connection As EntityConnection = DirectCast(DirectCast(Me, IObjectContextAdapter).ObjectContext.Connection, EntityConnection)
            Dim needClose As Boolean = False
            If (connection.State <> System.Data.ConnectionState.Open) Then
              connection.Open()
              needClose = True
            End If

            Try
              Using command As EntityCommand = New EntityCommand()
                If DirectCast(Me, IObjectContextAdapter).ObjectContext.CommandTimeout.HasValue Then
                  command.CommandTimeout = DirectCast(Me, IObjectContextAdapter).ObjectContext.CommandTimeout.Value
                End If
                command.CommandType = System.Data.CommandType.StoredProcedure
                command.CommandText = "VNDataEntities.InsertNewPalletJob"
                command.Connection = connection
                Dim ReprintParameter As EntityParameter = New EntityParameter("Reprint", System.Data.DbType.Boolean)
				ReprintParameter.Direction = ParameterDirection.Input
                If (Reprint.HasValue) Then
                  ReprintParameter.Value = Reprint
                End If
                command.Parameters.Add(ReprintParameter)

                command.ExecuteNonQuery()
              End Using
            Finally
              If needClose Then
                connection.Close()
              End If
            End Try
        End Sub


        Public Overridable Sub UpdatePalletJobInfo (ByVal SOId As String) 
            Dim connection As EntityConnection = DirectCast(DirectCast(Me, IObjectContextAdapter).ObjectContext.Connection, EntityConnection)
            Dim needClose As Boolean = False
            If (connection.State <> System.Data.ConnectionState.Open) Then
              connection.Open()
              needClose = True
            End If

            Try
              Using command As EntityCommand = New EntityCommand()
                If DirectCast(Me, IObjectContextAdapter).ObjectContext.CommandTimeout.HasValue Then
                  command.CommandTimeout = DirectCast(Me, IObjectContextAdapter).ObjectContext.CommandTimeout.Value
                End If
                command.CommandType = System.Data.CommandType.StoredProcedure
                command.CommandText = "VNDataEntities.UpdatePalletJobInfo"
                command.Connection = connection
                Dim SOIdParameter As EntityParameter = New EntityParameter("SOId", System.Data.DbType.String)
				SOIdParameter.Direction = ParameterDirection.Input
                If (Not SOId Is Nothing)
                  SOIdParameter.Value = SOId
                End If
                command.Parameters.Add(SOIdParameter)

                command.ExecuteNonQuery()
              End Using
            Finally
              If needClose Then
                connection.Close()
              End If
            End Try
        End Sub


        Public Overridable Sub RefreshSalesForce () 
            Dim connection As EntityConnection = DirectCast(DirectCast(Me, IObjectContextAdapter).ObjectContext.Connection, EntityConnection)
            Dim needClose As Boolean = False
            If (connection.State <> System.Data.ConnectionState.Open) Then
              connection.Open()
              needClose = True
            End If

            Try
              Using command As EntityCommand = New EntityCommand()
                If DirectCast(Me, IObjectContextAdapter).ObjectContext.CommandTimeout.HasValue Then
                  command.CommandTimeout = DirectCast(Me, IObjectContextAdapter).ObjectContext.CommandTimeout.Value
                End If
                command.CommandType = System.Data.CommandType.StoredProcedure
                command.CommandText = "VNDataEntities.RefreshSalesForce"
                command.Connection = connection

                command.ExecuteNonQuery()
              End Using
            Finally
              If needClose Then
                connection.Close()
              End If
            End Try
        End Sub


        Public Overridable Sub InsertNewCartonJob (ByVal Reprint As Boolean?) 
            Dim connection As EntityConnection = DirectCast(DirectCast(Me, IObjectContextAdapter).ObjectContext.Connection, EntityConnection)
            Dim needClose As Boolean = False
            If (connection.State <> System.Data.ConnectionState.Open) Then
              connection.Open()
              needClose = True
            End If

            Try
              Using command As EntityCommand = New EntityCommand()
                If DirectCast(Me, IObjectContextAdapter).ObjectContext.CommandTimeout.HasValue Then
                  command.CommandTimeout = DirectCast(Me, IObjectContextAdapter).ObjectContext.CommandTimeout.Value
                End If
                command.CommandType = System.Data.CommandType.StoredProcedure
                command.CommandText = "VNDataEntities.InsertNewCartonJob"
                command.Connection = connection
                Dim ReprintParameter As EntityParameter = New EntityParameter("Reprint", System.Data.DbType.Boolean)
				ReprintParameter.Direction = ParameterDirection.Input
                If (Reprint.HasValue) Then
                  ReprintParameter.Value = Reprint
                End If
                command.Parameters.Add(ReprintParameter)

                command.ExecuteNonQuery()
              End Using
            Finally
              If needClose Then
                connection.Close()
              End If
            End Try
        End Sub


        Public Overridable Sub InsertNewPalletJobLine (ByVal Reprint As Boolean?) 
            Dim connection As EntityConnection = DirectCast(DirectCast(Me, IObjectContextAdapter).ObjectContext.Connection, EntityConnection)
            Dim needClose As Boolean = False
            If (connection.State <> System.Data.ConnectionState.Open) Then
              connection.Open()
              needClose = True
            End If

            Try
              Using command As EntityCommand = New EntityCommand()
                If DirectCast(Me, IObjectContextAdapter).ObjectContext.CommandTimeout.HasValue Then
                  command.CommandTimeout = DirectCast(Me, IObjectContextAdapter).ObjectContext.CommandTimeout.Value
                End If
                command.CommandType = System.Data.CommandType.StoredProcedure
                command.CommandText = "VNDataEntities.InsertNewPalletJobLine"
                command.Connection = connection
                Dim ReprintParameter As EntityParameter = New EntityParameter("Reprint", System.Data.DbType.Boolean)
				ReprintParameter.Direction = ParameterDirection.Input
                If (Reprint.HasValue) Then
                  ReprintParameter.Value = Reprint
                End If
                command.Parameters.Add(ReprintParameter)

                command.ExecuteNonQuery()
              End Using
            Finally
              If needClose Then
                connection.Close()
              End If
            End Try
        End Sub
        
        #End Region
    End Class
End Namespace
